baseBox = "hashicorp/bionic64"
numCPUs = 1
memoryKb = 1024

Vagrant.configure("2") do |config|

	config.vm.provider "virtualbox" do |v|
		v.memory = memoryKb
		v.cpus = numCPUs
	end

	# create 1 salt master
	config.vm.define "core" do |core|
		core.vm.box = baseBox
		core.vm.hostname = "core"

		# install salt master
		core.vm.provision "shell",
			inline: "apt install -y curl",
			privileged: true

		core.vm.provision "shell",
			path: "provision/install_salt_master.sh"

		core.vm.provision "file",
			source: "provision/config/master",
			destination: "~/master"

		core.vm.provision "shell",
			inline: "mv /home/vagrant/master /etc/salt/master",
			privileged: true

		# set up firewall rules for salt master
		core.vm.provision "file",
			source: "provision/config/salt.ufw",
			destination: "~/salt.ufw"

		core.vm.provision "shell",
			inline: "mv /home/vagrant/salt.ufw /etc/ufw/applications.d/salt.ufw",
			privileged: true

		core.vm.provision "shell",
			path: "provision/ufw_allow_salt_master.sh",
			privileged: true

		# install salt minion
		core.vm.provision "shell",
			path: "provision/install_salt_minion.sh"

		core.vm.provision "file",
			source: "provision/config/minion",
			destination: "~/minion"

		core.vm.provision "shell",
			inline: "mv /home/vagrant/minion /etc/salt/minion",
			privileged: true

		core.vm.provision "shell",
			inline: "systemctl restart salt-minion",
			privileged: true
	end

	config.vm.define "compute" do |compute|
		# base config
		compute.vm.box = baseBox
		compute.vm.hostname = "compute"
		
		compute.vm.provision "shell",
			inline: "apt install -y curl",
			privileged: true

		# install salt minion
		compute.vm.provision "shell",
			path: "provision/install_salt_minion.sh"

		compute.vm.provision "file",
			source: "provision/config/minion",
			destination: "~/minion"

		compute.vm.provision "shell",
			inline: "mv /home/vagrant/minion /etc/salt/minion",
			privileged: true

		compute.vm.provision "shell",
			inline: "systemctl restart salt-minion",
			privileged: true
	end
end
